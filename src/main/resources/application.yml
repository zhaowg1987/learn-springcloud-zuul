eureka:
  client:
    service-url:
      # eureka 服务中心，如果集群，则用逗号隔开，写多个。
      defaultZone: http://10.0.8.52:8001/eureka/

server:
  port: 60002

spring:
  application:
    name: service-zuul

zuul:
  routes:
    uaa:
      path: /uaa/**
      serviceId: auth-server
    #/api-a/
    api-a:
      path: /api-a/**
      serviceId: service-producer
      # sensitiveHeaders: "*"
  host:
    connect-timeout-millis: 10000
    socket-timeout-millis: 60000
  #X-Forwarder-Host请求头默认添加到转发请求中
  add-proxy-headers: true
  #需要忽略的头部信息，不在传播到其他服务
  sensitive-headers: Access-Control-Allow-Origin
  ignored-headers: Access-Control-Allow-Origin,H-APP-Id,Token,APPToken

hystrix:
  threadpool:
    default:
      ##并发执行的最大线程数，默认10
      coreSize: 1000
      ##BlockingQueue的最大队列数
      maxQueueSize: 1000
      ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      queueSizeRejectionThreshold: 500
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 60000

service-producer:
  ribbon:
    #读取超时时间
    ReadTimeout: 60000
    #好像这个没什么用  如果说有人知道这个是什么作用可以评论告诉我一下
    ConnectTimeout: 10000
    MaxAutoRetries: 0
    MaxAutoRetriesNextServer: 1

security:
  oauth2:
    client:
      #令牌端点
      access-token-uri: http://10.0.8.52:60002/uaa/oauth/token
      #授权端点
      user-authorization-uri: http://10.0.8.52:60002/uaa/oauth/authorize
      #OAuth2客户端ID
      client-id: service-zuul
    resource:
      jwt:
        key-url: http://10.0.8.52:60002/uaa/oauth/token_key
      user-info-uri: http://10.0.8.52:60002/uaa/oauth/user
      #是否使用token info，默认为true
      prefer-token-info: true